services:
  blog:
    build:
      context: .
      dockerfile: ./dockerfiles/dev/django/Dockerfile
    container_name: blog
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./core:/app
    env_file:
      - ./envs/dev/django/.env
    depends_on:
      - blog_db
    command: sh -c "python manage.py makemigrations && \
                    python manage.py migrate && \
                    python manage.py seed && \
                    python manage.py runserver 0.0.0.0:8000"
  celery_worker:
    build:
      context: .
      dockerfile: ./dockerfiles/dev/celery/Dockerfile
    container_name: celery_worker
    restart: always
    volumes:
      - ./core:/app
    env_file:
      - ./envs/dev/celery/.env
    depends_on:
      - blog_db
      - rabbitmq
    command: sh -c "celery -A core worker -l info"

  blog_db:
    image: postgres:latest
    container_name: blog_db
    restart: always
    env_file:
      - ./envs/dev/postgres/.env
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - '5000:80'
      - '25:25'
      - '143:143'
    volumes:
        - ./smtp4dev-data:/smtp4dev
    environment:
      - ServerOptions__Urls=http://*:80
      - ServerOptions__HostName=smtp4dev
  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:4-management
    env_file:
      - ./envs/dev/rabbitmq/.env
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq/
      - ./rabbitmq/log/:/var/log/rabbitmq

  redis:
    image: redis
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning